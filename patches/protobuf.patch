diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 000000000..1ecf27eea
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,10 @@
+cmake_minimum_required(VERSION 3.1.3)
+project(protobuf_root)
+include(flags OPTIONAL)
+if(DEFINED XP_NAMESPACE)
+  set(nsPrefix ${XP_NAMESPACE}::)
+  set(nameSpace ${nsPrefix})
+else ()
+  set(nameSpace protobuf::)
+endif()
+add_subdirectory(cmake)
diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 9ca31ac0b..60acd67b5 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -124,7 +124,15 @@ if (CMAKE_USE_PTHREADS_INIT)
 endif (CMAKE_USE_PTHREADS_INIT)
 
 set(_protobuf_FIND_ZLIB)
-if (protobuf_WITH_ZLIB)
+option(ZLIB_MODULE_PATH "Find zlib in CMAKE_MODULE_PATH" OFF)
+mark_as_advanced(ZLIB_MODULE_PATH)
+if (ZLIB_MODULE_PATH)
+  find_package(usexp-ZLIB REQUIRED PATHS ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH)
+  if (ZLIB_FOUND)
+    set(HAVE_ZLIB 1)
+    set(ZLIB_INCLUDE_DIRECTORIES) # NOTE: bundled with library (INTERFACE_INCLUDE_DIRECTORIES)
+  endif (ZLIB_FOUND)
+elseif (protobuf_WITH_ZLIB)
   find_package(ZLIB)
   if (ZLIB_FOUND)
     set(HAVE_ZLIB 1)
@@ -143,7 +151,7 @@ if (protobuf_WITH_ZLIB)
     set(ZLIB_INCLUDE_DIRECTORIES)
     set(ZLIB_LIBRARIES)
   endif (ZLIB_FOUND)
-endif (protobuf_WITH_ZLIB)
+endif ()
 
 if (HAVE_ZLIB)
   add_definitions(-DHAVE_ZLIB)
@@ -249,6 +257,15 @@ if (protobuf_UNICODE)
   add_definitions(-DUNICODE -D_UNICODE)
 endif (protobuf_UNICODE)
 
+if(NOT DEFINED PROTOBUF_VER)
+  set(PROTOBUF_VER ${protobuf_VERSION})
+elseif(NOT PROTOBUF_VER STREQUAL protobuf_VERSION)
+  message(AUTHOR_WARNING "version passed in (${PROTOBUF_VER}) doesn't match internal version (${protobuf_VERSION})")
+endif()
+set(ver _${PROTOBUF_VER})
+set(verDir /${PROJECT_NAME}${ver})
+set(CMAKE_INSTALL_INCLUDEDIR include${verDir})
+
 include(libprotobuf-lite.cmake)
 include(libprotobuf.cmake)
 if (protobuf_BUILD_LIBPROTOC)
diff --git a/cmake/install.cmake b/cmake/install.cmake
index be47c54a1..2e93b0dfa 100644
--- a/cmake/install.cmake
+++ b/cmake/install.cmake
@@ -40,7 +40,7 @@ if (protobuf_BUILD_PROTOC_BINARIES)
   endif()
 endif (protobuf_BUILD_PROTOC_BINARIES)
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+#install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
 
 file(STRINGS extract_includes.bat.in _extract_strings
   REGEX "^copy")
@@ -122,19 +122,19 @@ configure_file(protobuf-options.cmake
 
 if (protobuf_BUILD_PROTOC_BINARIES)
   export(TARGETS libprotobuf-lite libprotobuf libprotoc protoc
-    NAMESPACE protobuf::
+    NAMESPACE ${nameSpace}
     FILE ${CMAKE_INSTALL_CMAKEDIR}/protobuf-targets.cmake
   )
 else (protobuf_BUILD_PROTOC_BINARIES)
   export(TARGETS libprotobuf-lite libprotobuf
-    NAMESPACE protobuf::
+    NAMESPACE ${nameSpace}
     FILE ${CMAKE_INSTALL_CMAKEDIR}/protobuf-targets.cmake
   )
 endif (protobuf_BUILD_PROTOC_BINARIES)
 
 install(EXPORT protobuf-targets
   DESTINATION "${CMAKE_INSTALL_CMAKEDIR}"
-  NAMESPACE protobuf::
+  NAMESPACE ${nameSpace}
   COMPONENT protobuf-export)
 
 install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_INSTALL_CMAKEDIR}/
diff --git a/cmake/libprotobuf-lite.cmake b/cmake/libprotobuf-lite.cmake
index 6bf86a277..951bcf300 100644
--- a/cmake/libprotobuf-lite.cmake
+++ b/cmake/libprotobuf-lite.cmake
@@ -75,6 +75,6 @@ if(MSVC AND protobuf_BUILD_SHARED_LIBS)
 endif()
 set_target_properties(libprotobuf-lite PROPERTIES
     VERSION ${protobuf_VERSION}
-    OUTPUT_NAME ${LIB_PREFIX}protobuf-lite
-    DEBUG_POSTFIX "${protobuf_DEBUG_POSTFIX}")
-add_library(protobuf::libprotobuf-lite ALIAS libprotobuf-lite)
+    OUTPUT_NAME ${LIB_PREFIX}protobuf-lite${ver}
+    DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
+add_library(${nameSpace}libprotobuf-lite ALIAS libprotobuf-lite)
diff --git a/cmake/libprotobuf.cmake b/cmake/libprotobuf.cmake
index 0c12596c2..5e0d5bab9 100644
--- a/cmake/libprotobuf.cmake
+++ b/cmake/libprotobuf.cmake
@@ -129,6 +129,6 @@ if(MSVC AND protobuf_BUILD_SHARED_LIBS)
 endif()
 set_target_properties(libprotobuf PROPERTIES
     VERSION ${protobuf_VERSION}
-    OUTPUT_NAME ${LIB_PREFIX}protobuf
-    DEBUG_POSTFIX "${protobuf_DEBUG_POSTFIX}")
-add_library(protobuf::libprotobuf ALIAS libprotobuf)
+    OUTPUT_NAME ${LIB_PREFIX}protobuf${ver}
+    DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
+add_library(${nameSpace}libprotobuf ALIAS libprotobuf)
diff --git a/cmake/libprotoc.cmake b/cmake/libprotoc.cmake
index b71f2f1ba..b0ebb9d79 100644
--- a/cmake/libprotoc.cmake
+++ b/cmake/libprotoc.cmake
@@ -176,7 +176,7 @@ endif()
 set_target_properties(libprotoc PROPERTIES
     COMPILE_DEFINITIONS LIBPROTOC_EXPORTS
     VERSION ${protobuf_VERSION}
-    OUTPUT_NAME ${LIB_PREFIX}protoc
-    DEBUG_POSTFIX "${protobuf_DEBUG_POSTFIX}")
-add_library(protobuf::libprotoc ALIAS libprotoc)
+    OUTPUT_NAME ${LIB_PREFIX}protoc${ver}
+    DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
+add_library(${nameSpace}libprotoc ALIAS libprotoc)
 
diff --git a/cmake/protobuf-config.cmake.in b/cmake/protobuf-config.cmake.in
index 11b85d3c0..f28f05b05 100644
--- a/cmake/protobuf-config.cmake.in
+++ b/cmake/protobuf-config.cmake.in
@@ -125,9 +125,9 @@ function(protobuf_generate)
 
     add_custom_command(
       OUTPUT ${_generated_srcs}
-      COMMAND  protobuf::protoc
+      COMMAND @nsPrefix@protoc
       ARGS --${protobuf_generate_LANGUAGE}_out ${_dll_export_decl}${protobuf_generate_PROTOC_OUT_DIR} ${_plugin} ${_protobuf_include_path} ${_abs_file}
-      DEPENDS ${_abs_file} protobuf::protoc
+      DEPENDS ${_abs_file} @nsPrefix@protoc
       COMMENT "Running ${protobuf_generate_LANGUAGE} protocol buffer compiler on ${_proto}"
       VERBATIM )
   endforeach()
diff --git a/cmake/protobuf-module.cmake.in b/cmake/protobuf-module.cmake.in
index 74c548872..c44cb4f99 100644
--- a/cmake/protobuf-module.cmake.in
+++ b/cmake/protobuf-module.cmake.in
@@ -95,9 +95,9 @@ function(_protobuf_find_libraries name filename)
     # Honor cache entry used by CMake 3.5 and lower.
     set(${name}_LIBRARIES "${${name}_LIBRARY}" PARENT_SCOPE)
   else()
-    get_target_property(${name}_LIBRARY_RELEASE protobuf::lib${filename}
+    get_target_property(${name}_LIBRARY_RELEASE @nsPrefix@lib${filename}
       LOCATION_RELEASE)
-    get_target_property(${name}_LIBRARY_DEBUG protobuf::lib${filename}
+    get_target_property(${name}_LIBRARY_DEBUG @nsPrefix@lib${filename}
       LOCATION_DEBUG)
 
     select_library_configurations(${name})
@@ -140,18 +140,18 @@ if(UNIX)
 endif()
 
 # Set the include directory
-get_target_property(Protobuf_INCLUDE_DIRS protobuf::libprotobuf
+get_target_property(Protobuf_INCLUDE_DIRS @nsPrefix@libprotobuf
   INTERFACE_INCLUDE_DIRECTORIES)
 
 # Set the protoc Executable
-get_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc
+get_target_property(Protobuf_PROTOC_EXECUTABLE @nsPrefix@protoc
   IMPORTED_LOCATION_RELEASE)
 if(NOT EXISTS "${Protobuf_PROTOC_EXECUTABLE}")
-  get_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc
+  get_target_property(Protobuf_PROTOC_EXECUTABLE @nsPrefix@protoc
     IMPORTED_LOCATION_DEBUG)
 endif()
 if(NOT EXISTS "${Protobuf_PROTOC_EXECUTABLE}")
-  get_target_property(Protobuf_PROTOC_EXECUTABLE protobuf::protoc
+  get_target_property(Protobuf_PROTOC_EXECUTABLE @nsPrefix@protoc
     IMPORTED_LOCATION_NOCONFIG)
 endif()
 
diff --git a/cmake/protoc.cmake b/cmake/protoc.cmake
index f90e525e8..241ecbd53 100644
--- a/cmake/protoc.cmake
+++ b/cmake/protoc.cmake
@@ -10,7 +10,8 @@ endif()
 
 add_executable(protoc ${protoc_files} ${protoc_rc_files})
 target_link_libraries(protoc libprotoc libprotobuf)
-add_executable(protobuf::protoc ALIAS protoc)
+add_executable(${nameSpace}protoc ALIAS protoc)
 
 set_target_properties(protoc PROPERTIES
-    VERSION ${protobuf_VERSION})
+  DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}"
+  OUTPUT_NAME protoc${ver})
